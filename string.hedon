: strlen
  0 swap [ dup c@ 0 eq not ] [ swap 1+ swap 1 s+ ] while drop
;
rem d s
: chrcpy u8@ swap u8! ;
rem d s n
: memcpy 0 swap [ [ 2dup chrcpy [ 1 p+ ] bi@ ] dip ] do drop drop ;
rem d s n
: strcpyn [ [ cast> Pointer ] bi@ ] dip memcpy ;
: strcpy dup strlen 1+ strcpyn ;
: new-cstr 1+ c.malloc pointer-to-cstr ;

: eq-len? 2dup [ strlen ] bi@ eq ;
: strend? c@ 0 eq ;
: streq-char? [ c@ ] bi@ eq ;
: streq?
  [ dup strend? not ] [ 2dup streq-char? not [ drop drop false ret "" "" ] when [ 1 s+ ] bi@ ] while
  drop drop true
;

: String newtype ;
String Fixnum is
: str+ [ dup cast> Pointer ] dip p+ ; ![ String Int -- String Pointer ]
: String.header-size cell cell + ;
: String.capacity 0 str+ ;
: String.len cell str+ ;
: String.data String.header-size str+ cast> Cstr ;

: length>> String.len @ ;
: >>length String.len swap [ ! ] dip ;
: capacity>> String.capacity @ ;
: >>capacity String.capacity swap [ ! ] dip ;

: alloc-string String.header-size + 1 + alloc cast> String ;
: string.realloc capacity>> String.header-size + 1 + [ cast> Pointer ] dip realloc cast> String ;
: new-string dup alloc-string >>capacity 0 swap >>length ;

: string.need-extend length>> swap [ + ] dip capacity>> swap [ < not ] dip swap ;
: string.2capacity! capacity>> dup + swap >>capacity ;
: string.extend-capacity [ [ dup ] dip string.need-extend ] [ string.2capacity! ] while [ drop ] dip ;
: string.do-extend string.extend-capacity string.realloc ;
: string.extend-if-need [ dup ] dip string.need-extend [ string.do-extend ] [ swap drop ] if ;

: string dup strlen dup new-string >>length String.data swap [ swap strcpy ] dip ;
: .ss String.data .s ;

: copy&seek swap dup strlen [ [ strcpy ] 2keep drop ] dip s+ ;
: 2length [ length>> ] dip length>> [ swap ] dip + ;
: 2string.data [ String.data ] dip String.data [ swap ] dip ;
: 2strcpy-string String.data swap [ copy&seek copy&seek drop ] dip ;
: new-2string 2length dup new-string >>length ;
: concat swap new-2string [ 2string.data ] dip 2strcpy-string ;
: 2print swap .ss swap .ss ;
: 2length-print swap length>> . swap length>> . ;

: String.tail String.data swap length>> swap [ s+ ] dip swap ;
: string@ String.data swap [ swap s+ c@ ] dip swap ;
: add-length String.len swap [ +! ] dip ;
: copy-cstr-to-string String.tail swap [ swap strcpy ] dip ;
: string.extend-with-cstr [ strlen ] dip add-length ;
: append-cstr [ dup dup strlen ] dip string.extend-if-need copy-cstr-to-string string.extend-with-cstr ;

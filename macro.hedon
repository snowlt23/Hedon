: 2dup
  swap dup [ swap dup ] dip swap
;
: bi@ dup compile [ swap ] postcompile compile [ swap ] postcompile ; immediate

rem n q --
: do
  [ 0 ] postcompile
  [ 2dup gr ] postquot
  [ [ 1+ ] postquot combine ] dip
  swap [ while ] postcompile
; immediate

rem n "name"
: return-pointer Pointer eff.push ;
: array dp @ literal token-to-quot parse-token create-def [ return-pointer ] eff.postattach ;
: array-addr-by-index cell mul p+ ;
: array@ swap array-addr-by-index @ ;
: array! swap array-addr-by-index ! ;
: Int.allot cell mul allot ;

: test-check [ drop ] [ "[ERROR] " .s .s 1 exit ] if ;
: test compile [ test-check ] postcompile ; immediate
